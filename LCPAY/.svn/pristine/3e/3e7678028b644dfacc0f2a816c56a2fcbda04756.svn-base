package com.cifpay.lc.core.interceptor;

import com.cifpay.lc.domain.AbstractInputBean;
import com.cifpay.lc.util.RequestIdGen;
import com.cifpay.lc.util.logging.LogUtil;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

/**
 * Created by sweet on 17-1-3.
 */
@Aspect
@Component
public class RequestIdInterceptor {

    private static final Logger logger = LoggerFactory.getLogger(RequestIdInterceptor.class);

    @Pointcut("execution(* com.cifpay.lc..*.*(..))")
    private void isCifpay() {
    }

    @Pointcut("@within(com.cifpay.lc.core.interceptor.annotation.EnableGenerateRequestId)")
    private void hasAnnotation() {
    }

    @Around("isCifpay() && hasAnnotation()")
    public Object process(ProceedingJoinPoint pjp) throws Throwable {

        String requestId = "";
        String sence = "UNKNOWN";

        // 尝试从传入参数中读取 requestId
        Object[] args = pjp.getArgs();
        if (args != null && args.length > 0) {
            for (Object arg : args) {
                if (arg instanceof AbstractInputBean) {
                    AbstractInputBean abstractInputBean = (AbstractInputBean) arg;

                    requestId = abstractInputBean.getRequestId();
                    sence = abstractInputBean.getScene().val;
                }

            }
        }

        // 生成一个 requestId
        if (StringUtils.isEmpty(requestId)) {
            requestId = RequestIdGen.resolveReqId();

            logger.warn("{}: 生成RequestId: {}", pjp.toShortString(), requestId);
        }

        // 设置slf4j
        LogUtil.initMDC(requestId, sence);

        return pjp.proceed();
    }
}
