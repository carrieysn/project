package com.cifpay.lc.bankadapter.common.impl.unionpay;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import com.cifpay.lc.bankadapter.BusinessJUnitTestBase;
import com.cifpay.lc.bankadapter.api.IBankTradeService;
import com.cifpay.lc.bankadapter.api.helper.GetTradeParamHelper;
import com.cifpay.lc.bankadapter.api.input.unionpay.OpenCifParam;

public class OpenCifTradeStategyTest extends BusinessJUnitTestBase {
	@Autowired
	IBankTradeService bankTradeService;

	/**
	 *  定购  开证 CP200 信用卡（订购消费）
	 */
	//@Test
	public void processTest_TRADE_UNIONPAY_DINGGOU_CONSUME() throws Exception {
		
		OpenCifParam param = GetTradeParamHelper.getInstance(GetTradeParamHelper.UNION_PAY)
				.getTradeParam(OpenCifParam.class, "CP200", "30");
		param.setLcId(new Date().getTime());
		String time = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date());
		param.setOrderId(time);
		param.setTxnTime(time);
		param.setTxnAmt(new Long(1001L));
		param.setChannelType("07");
		param.setSubMerId("777290058137015");
		param.setAccType("01");
		param.setAccNo("6221558812340000");

		param.setCvn2("123");
		param.setExpired("1711");
		param.setPhoneNo("13552535506");
		param.setReqReserved("reqReserved-保留域");
		param.setOrderDesc("订单描述。。");

		bankTradeService.doTrade(param);
	}
	/**
	 * 订购 预授权
	 * @throws Exception 
	 * @throws IllegalAccessException 
	 * @throws InstantiationException 
	 */
	@Test
    public void processAuthTest() throws Exception{
		
		OpenCifParam param = GetTradeParamHelper.getInstance(GetTradeParamHelper.UNION_PAY)
				.getTradeParam(OpenCifParam.class, "CP300", "30");
		param.setLcId(new Date().getTime());
		param.setUserId("138000138000");
		String time = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date());
		param.setOrderId(time);
		param.setTxnTime(time);
		param.setTxnAmt(new Long(1001L));
		param.setChannelType("07");
		param.setSubMerId("777290058137015");
		param.setAccType("01");
		param.setAccNo("6221558812340000");
		param.setCurrencyCode("156");
		/*param.setCertifTp("01");
		param.setCertifId("341126197709218366");*/
	    param.setCustomerNm("互联网");
		param.setCvn2("123");
		param.setExpired("1711");
		param.setPhoneNo("13552535506");
		param.setReqReserved("reqReserved-保留域");
		param.setOrderDesc("订单描述。。");
		bankTradeService.doTrade(param);
		
	}
	
    /**
	 * 无跳转  开证 CP200 储蓄卡  (同Token消费交易 )
	 */
	//@Test
	public void processTest_TRADE_UNIONPAY_WU_CONSUME() throws Exception {
		
		OpenCifParam param = GetTradeParamHelper.getInstance(GetTradeParamHelper.UNION_PAY)
				.getTradeParam(OpenCifParam.class, "CP200", "10");
		param.setLcId(new Date().getTime());
		String time = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date());
		param.setOrderId(time);
		param.setTxnTime(time);
		param.setTxnAmt(new Long(1002L));
		param.setChannelType("07");
		param.setSubMerId("777290058137015");
		param.setAccType("01");
		param.setAccNo("6216261000000000018");
		param.setSmsCode("111111");

		param.setPhoneNo("13552535506");
		param.setReqReserved("reqReserved-保留域");
		param.setOrderDesc("订单描述。。");

		bankTradeService.doTrade(param);
	}
}
