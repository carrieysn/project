//package com.cifpay.lc.security.impl;
//
//import com.cifpay.lc.api.gateway.basic.signkey.MerFrontValidationMaterial;
//import com.cifpay.lc.constant.ReturnCode;
//import com.cifpay.lc.gateway.common.MerchantSummaryInfoCache;
//import com.cifpay.lc.gateway.common.exception.GatewayProcessException;
//import com.cifpay.lc.domain.security.FinalSignedMerchantResponse;
//import com.cifpay.lc.domain.security.MerchantResponseData;
//import com.cifpay.lc.security.SecurityService;
//import com.cifpay.lc.util.LcMd5SignTool;
//import com.fasterxml.jackson.core.JsonProcessingException;
//import com.fasterxml.jackson.databind.ObjectMapper;
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Component;
//import org.springframework.util.Base64Utils;
//
///**
// * Created by sweet on 16-9-21.
// */
//@Component
//public class Md5SecurityProvider implements SecurityService {
//
//    protected Logger logger = LoggerFactory.getLogger(getClass());
//    private boolean isLoggerDebugEnabled = logger.isDebugEnabled();
//
//    @Autowired
//    private MerchantSummaryInfoCache merchantSummaryInfoCache;
//
//    @Override
//    public FinalSignedMerchantResponse encryptData(String merId, MerchantResponseData resp) {
//        // 将merResponse对象转JSON并Base64
//        String resDataInBase64Json = "";
//        try {
//            ObjectMapper mapper = new ObjectMapper();
//            byte[] jsonBytes = mapper.writeValueAsBytes(resp);
//            resDataInBase64Json = Base64Utils.encodeToString(jsonBytes);
//        } catch (JsonProcessingException e) {
//            logger.error("对Controller返回结果对象进行JSON转换时发生异常，异常信息：{}", String.valueOf(e.getMessage()), e);
//            throw new GatewayProcessException(ReturnCode.UNKNOWN_ERROR, "数据处理失败");
//        }
//
//
//        // 生成签名
//        MerFrontValidationMaterial material = merchantSummaryInfoCache.getMerchantSummary(merId);
//        if (null == material) {
//            // should never happen
//            logger.error("对controller返回结果进行签名时发生错误，未能查找到签名所需的key，merId: {}", merId);
//            throw new GatewayProcessException(ReturnCode.GW_MER_ID_NOT_EXISTS, "不存在该商户ID");
//        }
//
//        String signKey = merchantSummaryInfoCache.getDecryptKey(material);
//        String sign = LcMd5SignTool.signString(resDataInBase64Json, signKey);
//
//        if (logger.isDebugEnabled()) {
//            logger.debug("~~~为MerchantResponse对象中的resData签名完毕，merId: {}, 签名结果：{}", merId, sign);
//        }
//
//        FinalSignedMerchantResponse finalResponse = new FinalSignedMerchantResponse();
//        finalResponse.setSign(sign);
//        finalResponse.setEncodedJsonData(resDataInBase64Json);
//
//        return finalResponse;
//    }
//}
