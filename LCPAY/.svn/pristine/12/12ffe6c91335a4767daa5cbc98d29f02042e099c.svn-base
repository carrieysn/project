package com.cifpay.lc.std.paychannel.impl;

import com.cifpay.lc.bankadapter.api.helper.GetTradeParamHelper;
import com.cifpay.lc.bankadapter.api.input.unionpay.OpenCifParam;
import com.cifpay.lc.constant.enums.PayMethod;
import com.cifpay.lc.core.db.dao.UnionUserAccountDao;
import com.cifpay.lc.core.db.pojo.LcOpen;
import com.cifpay.lc.core.db.pojo.PreLc;
import com.cifpay.lc.core.db.pojo.UnionUserAccount;
import com.cifpay.lc.core.uid.UnionUserAccountIdWorker;
import com.cifpay.lc.domain.enums.AdminCardType;
import com.cifpay.lc.domain.lc.OpenLcOutputBean;
import com.cifpay.lc.domain.lc.OpenLcUnionCreditInputBean;
import com.cifpay.lc.std.domain.paychannel.FreezeInputBean;
import com.cifpay.lc.util.security.ThreeDESUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.text.SimpleDateFormat;
import java.util.Date;

@Component
public class UnionFreezeCreditImpl extends UnionFreezeBase<OpenLcUnionCreditInputBean, OpenLcOutputBean> {

    @Autowired
    private UnionUserAccountDao userAccountDao;

    @Autowired
    private UnionUserAccountIdWorker unionUserAccountIdWorker;

    @Override
    public PayMethod getOpenLcChannel() {
        return PayMethod.UNION_CREDIT;
    }

    @Override
    protected AdminCardType getCardType() {
        return AdminCardType.CREDIT;
    }

    @Override
    protected OpenCifParam createOpenCifParam(OpenLcUnionCreditInputBean creditInputBean,
                                              FreezeInputBean freezeInputBean,
                                              String subMerId) throws Exception {

        PreLc preLc = freezeInputBean.getPreLc();

        LcOpen lcOpen = freezeInputBean.getLcOpen();

        GetTradeParamHelper helper = GetTradeParamHelper.getInstance(GetTradeParamHelper.UNION_PAY);

        OpenCifParam param = helper.getTradeParam(OpenCifParam.class, preLc.getLcType(), CREDIT);

        param.setLcId(preLc.getLcId());
        param.setUserId(preLc.getMerUserId());
        param.setSubMerId(subMerId); // DONE:查询银联二级商户Id
        param.setOrderId(lcOpen.getLcOpenId().toString()); // LC_OPEN_ID
        param.setOrderDesc(preLc.getOrderContent());
        param.setTxnTime(new SimpleDateFormat("yyyyMMddhhmmss").format(new Date()));
        param.setTxnAmt(preLc.getLcAmount().longValue());
        param.setChannelType("07");
        param.setAccNo(creditInputBean.getAccNo());
        param.setCvn2(creditInputBean.getCvn2());
        param.setExpired(new SimpleDateFormat("yyMM").format(creditInputBean.getExpired()));
        param.setPhoneNo(creditInputBean.getPhoneNo());
        param.setCertifTp(creditInputBean.getCertifTp());
        param.setCertifId(creditInputBean.getCertifId());
        param.setCustomerNm(creditInputBean.getCustomerNm());

        return param;
    }

    @Override
    protected void saveUserUnionInfo(OpenLcUnionCreditInputBean creditInputBean, FreezeInputBean freezeInputBean) {

        PreLc preLc = freezeInputBean.getPreLc();

        if (null == userAccountDao.selectById(creditInputBean.getMerId(), preLc.getMerUserId(),
                AdminCardType.CREDIT.getCode())) {

            String encryptAccNo = null;
            String encryptPhoneNo = null;
            try {
                encryptAccNo = ThreeDESUtil.desEncryption(creditInputBean.getAccNo());
                encryptPhoneNo = ThreeDESUtil.desEncryption(creditInputBean.getPhoneNo());
            } catch (Exception e) {
                e.printStackTrace();
            }
            UnionUserAccount unionUserAccount = new UnionUserAccount();
            unionUserAccount.setpId(unionUserAccountIdWorker.nextId());
            unionUserAccount.setMid(creditInputBean.getMerId());
            unionUserAccount.setMerUserid(preLc.getMerUserId());
            unionUserAccount.setPayerAccno(encryptAccNo);
            unionUserAccount.setUserMobile(encryptPhoneNo);
            unionUserAccount.setAccnoType(AdminCardType.CREDIT.getCode());
            unionUserAccount.setCreateDate(new Date());
            userAccountDao.insert(unionUserAccount);
        }
    }

    @Override
    protected boolean validataMobile(FreezeInputBean freezeInputBean, String merId, String phoneNo) {
        return true;
    }
}
