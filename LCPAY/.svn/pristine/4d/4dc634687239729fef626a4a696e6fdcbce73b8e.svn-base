package com.cifpay.lc.std.paychannel.impl;

import com.cifpay.lc.bankadapter.api.helper.GetTradeParamHelper;
import com.cifpay.lc.bankadapter.api.input.unionpay.OpenCifParam;
import com.cifpay.lc.constant.enums.PayMethod;
import com.cifpay.lc.core.db.pojo.LcOpen;
import com.cifpay.lc.core.db.pojo.PreLc;
import com.cifpay.lc.domain.enums.AdminCardType;
import com.cifpay.lc.domain.lc.OpenLcOutputBean;
import com.cifpay.lc.domain.lc.OpenLcUnionDepositInputBean;
import com.cifpay.lc.std.domain.paychannel.FreezeInputBean;
import org.springframework.stereotype.Component;

import java.text.SimpleDateFormat;
import java.util.Date;

@Component
public class UnionFreezeDepositImpl extends UnionFreezeBase<OpenLcUnionDepositInputBean, OpenLcOutputBean> {

    @Override
    public PayMethod getOpenLcChannel() {
        return PayMethod.UNION_DEPOSIT;
    }

    @Override
    protected AdminCardType getCardType() {
        return AdminCardType.DEPOSIT;
    }


    @Override
    protected OpenCifParam createOpenCifParam(OpenLcUnionDepositInputBean inputBean,
                                              FreezeInputBean freezeInputBean,
                                              String subMerId) throws Exception {

        PreLc preLc = freezeInputBean.getPreLc();

        LcOpen lcOpen = freezeInputBean.getLcOpen();

        GetTradeParamHelper helper = GetTradeParamHelper.getInstance(GetTradeParamHelper.UNION_PAY);

        OpenCifParam param = helper.getTradeParam(OpenCifParam.class, preLc.getLcType(), DEBIT);

//        param.setMerId(inputBean.getMerId());
        param.setLcId(preLc.getLcId());
        param.setUserId(preLc.getMerUserId());
//        param.setTxnId(TradeConstant.TRADE_CONFIG.TRADE_UNIONPAY_WU_CONSUME);
        param.setOrderId(lcOpen.getLcOpenId().toString()); // LC_OPEN_ID
        param.setTxnTime(new SimpleDateFormat("yyyyMMddhhmmss").format(new Date()));
        param.setTxnAmt(preLc.getLcAmount().longValue());
        param.setChannelType("07");
        param.setSubMerId(subMerId); // DONE:
        param.setAccNo(inputBean.getAccNo());
        param.setPhoneNo(inputBean.getPhoneNo());
        param.setSmsCode("111111");// 测试
//        param.setOrderDesc(preLc.getOrderContent());
//        param.setCertifTp(inputBean.getCertifTp());
//        param.setCertifId(inputBean.getCertifId());
//        param.setCustomerNm(inputBean.getCustomerNm());

        return param;
    }
}
