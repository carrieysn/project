package com.cifpay.lc.std;

import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration;
import org.springframework.boot.autoconfigure.web.HttpMessageConverters;
import org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration;
import org.springframework.boot.web.support.SpringBootServletInitializer;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.ImportResource;
import org.springframework.http.converter.HttpMessageConverter;

import com.alibaba.fastjson.serializer.SerializerFeature;
import com.alibaba.fastjson.support.config.FastJsonConfig;
import com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;
import com.cifpay.lc.std.integration.WebContextShutdownListener;

/**
 * Non-Standard Business应用初始化入口。
 * 
 * 
 *
 */
@Configuration
@EnableAutoConfiguration(exclude = { WebMvcAutoConfiguration.EnableWebMvcConfiguration.class,
		DataSourceAutoConfiguration.class, JmxAutoConfiguration.class })
@ComponentScan(basePackages={"com.cifpay.lc"})
@ImportResource({ "classpath:/com/cifpay/lc/std/business/config/spring-root-context.xml" })
@EnableCaching
public class StandardLCBusinessApplication extends SpringBootServletInitializer /*extends SpringBootServletInitializer implements WebApplicationInitializer*/ {

	@Bean
    public HttpMessageConverters fastJsonHttpMessageConverters() {
       FastJsonHttpMessageConverter fastConverter = new FastJsonHttpMessageConverter();
       FastJsonConfig fastJsonConfig = new FastJsonConfig();
       fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat);
       /*fastJsonConfig.setSerializerFeatures(
               SerializerFeature.PrettyFormat,
               SerializerFeature.WriteClassName,
               SerializerFeature.WriteMapNullValue
       );*/
       fastConverter.setFastJsonConfig(fastJsonConfig);
       HttpMessageConverter<?> converter = fastConverter;
       return new HttpMessageConverters(converter);
    }
	
	@Bean
	public WebContextShutdownListener webContextShutdownListener() {
		return new WebContextShutdownListener();
	}

}
