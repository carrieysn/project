package com.cifpay.lc.extension;

import com.alibaba.dubbo.common.Constants;
import com.alibaba.dubbo.common.extension.Activate;
import com.alibaba.dubbo.rpc.*;
import com.cifpay.lc.constant.enums.LoggerEnum;
import com.cifpay.lc.util.RequestIdGen;
import com.cifpay.lc.util.logging.LogUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.slf4j.MDC;
import org.springframework.util.StringUtils;

/**
 * dubbo 拦截器
 * customer 调用服务前传递requestId
 * customer 调用服务后保存requestId，兼容多次调用的情况
 */
@Activate(group = Constants.CONSUMER)
public class DubboCustomerRequestFilter implements Filter {

    static final Logger logger = LoggerFactory.getLogger(DubboCustomerRequestFilter.class);

    @Override
    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {

        // 读取requestId
        String requestId = MDC.get(LogUtil.REQUEST_ID_KEY);

        if (StringUtils.isEmpty(requestId)) {
            requestId = RequestIdGen.resolveReqId();

            logger.warn("未设置RequestId: {}", invoker.getInterface().toString());
        }

        // 远程调用前，传递requestId
        RpcContext.getContext().setAttachment(LoggerEnum.DUBBO_CONTEXT_REQUEST_ID_KEY, requestId);

        logger.debug("调用dubbo服务: {}", invoker.getInterface().toString());
        return invoker.invoke(invocation);
    }
}
