package com.cifpay.lc.std.business.message.lc;

import com.cifpay.lc.api.BusinessInput;
import com.cifpay.lc.api.BusinessOutput;
import com.cifpay.lc.api.gateway.lc.ApplyService;
import com.cifpay.lc.api.message.lc.AutoApplyLcMessageService;
import com.cifpay.lc.constant.ReturnCode;
import com.cifpay.lc.core.common.CoreBusinessContext;
import com.cifpay.lc.core.common.CoreBusinessInterceptorConfig;
import com.cifpay.lc.core.exception.CoreBusinessException;
import com.cifpay.lc.domain.lc.ApplyInputBean;
import com.cifpay.lc.domain.lc.ApplyOutputBean;
import com.cifpay.lc.domain.message.LcApplyParamBean;
import com.cifpay.lc.domain.message.MessageOutputBean;
import com.cifpay.lc.std.interceptor.BusinessLoggingInterceptor;
import com.cifpay.lc.std.interceptor.MessageLockInterceptor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service("autoApplyLcMessageService")
@CoreBusinessInterceptorConfig({BusinessLoggingInterceptor.class, MessageLockInterceptor.class})
public class AutoApplyLcMessageServiceImpl extends LcMessageServiceBase<LcApplyParamBean> implements AutoApplyLcMessageService {

    @Autowired
    private ApplyService applyService;

    @Override
    protected BusinessOutput<MessageOutputBean> handleMessage(LcApplyParamBean messageParams, CoreBusinessContext context) throws CoreBusinessException {

        ApplyInputBean applyInputBean = new ApplyInputBean();
        applyInputBean.setLcId(messageParams.getLcId());
        applyInputBean.setMerId(messageParams.getMerId());
        applyInputBean.setLcAppointmentId(messageParams.getLcAppointmentId());
        applyInputBean.setRemark(messageParams.getRemark());

        BusinessOutput<ApplyOutputBean> output = applyService.execute(new BusinessInput<ApplyInputBean>(applyInputBean));

        if (output.isSuccess()) {
            return BusinessOutput.success(new MessageOutputBean(true));
        }

        return BusinessOutput.fail(ReturnCode.CORE_MSG_UNKNOWN_ERROR, "消息处理失败");
    }
}
