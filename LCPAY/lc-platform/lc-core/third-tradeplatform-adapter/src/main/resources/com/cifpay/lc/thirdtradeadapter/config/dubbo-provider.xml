<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <dubbo:application name="CIFPAYLC-ThirdTradeplatformAdatper" owner="cifpaylc" organization="cifpay" />
    
    <!-- 
    address：注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port，不同集群的注册中心，请配置多个&lt;dubbo:registry&gt;标签。
    username：登录注册中心用户名，如果注册中心不需要验证可不填。
    password：登录注册中心密码，如果注册中心不需要验证可不填。
    timeout：注册中心请求超时时间(毫秒)，默认5000。
    file：使用文件缓存注册中心地址列表及服务提供者列表，应用重启时将基于此文件恢复，注意：两个注册中心不能使用同一文件存储。
    check：注册中心不存在时，是否报错，默认true。
    -->
    <dubbo:registry address="${dubbo.registry.zookeeper.address}" 
    	timeout="10000" 
    	file="${dubbo.registry.cacheFilePathPrefix}_#{T(com.cifpay.lc.util.AppNodeInfoHelper).getLocalRuntimePathIdentifier()}" />
    
    <!-- 
    name: 协议名称，缺省值dubbo。
    host: 服务主机名，多网卡选择或指定VIP及域名时使用，为空则自动查找本机IP，建议不要配置，让Dubbo自动获取本机IP
    port：dubbo协议缺省端口为20880，rmi协议缺省端口为1099，http和hessian协议缺省端口为80；如果配置为-1 或者 没有配置port，则会分配一个没有被占用的端口。Dubbo 2.4.0+，分配的端口在协议缺省端口的基础上增长，确保端口段可控。
    threads：服务线程池大小(固定大小)，默认100。
    payload：请求及响应数据包大小限制，单位：字节，默认88388608(=8M)。
    serialization：协议序列化方式，当协议支持多种序列化方式时使用，比如：dubbo协议的dubbo,hessian2,java,compactedjava，以及http协议的json等；dubbo协议缺省为hessian2，rmi协议缺省为java，http协议缺省为json。
    charset: 序列化编码，默认UTF-8
    accesslog：设为true，将向logger中输出访问日志，也可填写访问日志文件路径，直接把访问日志输出到指定文件。
    heartbeat：心跳间隔，对于长连接，当物理层断开时，比如拔网线，TCP的FIN消息来不及发送，对方收不到断开事件，此时需要心跳来帮助检查连接是否已断开；默认0。
    server：协议的服务器端实现类型，比如：dubbo协议的mina,netty等，http协议的jetty,servlet等；dubbo协议缺省为netty，http协议缺省为servlet。
    client：协议的客户端实现类型，比如：dubbo协议的mina,netty等；dubbo协议缺省为netty。
    -->
    <dubbo:protocol name="dubbo" port="-1" threads="100" serialization="kryo" />

	<dubbo:service interface="com.cifpay.lc.thirdtradeadapter.api.service.icbcbankent.ICBCBankEntPayOutSubmitService" ref="icbcBankEntPayOutSubmitService" protocol="dubbo" />
	<dubbo:service interface="com.cifpay.lc.thirdtradeadapter.api.service.icbcbankent.ICBCBankEntPayOutEnquiryService" ref="icbcBankEntPayOutEnquiryService" protocol="dubbo" />
	<dubbo:service interface="com.cifpay.lc.thirdtradeadapter.api.service.icbcbankent.ICBCBankEntBalanceEnquiryService" ref="icbcBankEntBalanceEnquiryService" protocol="dubbo" />
	<dubbo:service interface="com.cifpay.lc.thirdtradeadapter.api.service.icbcbankent.ICBCBankEntVirutalTradeDateUpdateService" ref="icbcBankEntVirutalTradeDateUpdateService" protocol="dubbo" />
	<dubbo:service interface="com.cifpay.lc.thirdtradeadapter.api.service.icbcbankent.ICBCBankEntVirutalTradeDateQueryService" ref="icbcBankEntVirutalTradeDateQueryService" protocol="dubbo" />

</beans>